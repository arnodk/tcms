[section:main]
<div class="dashboard-page">
    <div class="grid-default">
        <div class="grid-top">tcms dashboard</div>
        <div class="grid-left-content">
            <ul>
                <li onclick="dashboardFireEvent(this)" class="dashboard-menu-item" data-system="page" data-action="list"><i class="fas fa-file-alt"></i>Pages</li>
                <li onclick="dashboardFireEvent(this)" class="dashboard-menu-item" data-system="block" data-action="list"><i class="fas fa-box"></i>Blocks</li>
                <li onclick="dashboardFireEvent(this)" class="dashboard-menu-item" data-system="templates" data-action="list"><i class="fas fa-file-code"></i>Templates</li>
                <li onclick="dashboardFireEvent(this)" class="dashboard-menu-item" data-system="asset" data-action="list"><i class="fas fa-file"></i>Assets</li>
                <li onclick="dashboardFireEvent(this)" class="dashboard-menu-item" data-system="log" data-action="list"><i class="fas fa-server"></i>Logs</li>
                <li onclick="dashboardFireEvent(this)" class="dashboard-menu-item" data-system="login" data-action="list"><i class="fas fa-user"></i>Users</li>
            </ul>
        </div>
        <div class="grid-middle-content">
            <div id="content">
                <div class="card" >
                  <div class="card-body">
                    <h5 class="card-title">TCMS dashboard</h5>
                    <h6 class="card-subtitle mb-2 text-muted">Card subtitle</h6>
                    <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                    <a href="#" class="card-link">Card link</a>
                    <a href="#" class="card-link">Another link</a>
                  </div>
                </div>
            </div>
        </div>
    </div>
</div>
[/section]

[section:js]
tcms.setToken([newtoken]);

var sSystem = '';
var sAction = '';

window.dashboardFireEvent = function(oLink) {
    sSystem = oLink.getAttribute('data-system');
    sAction = oLink.getAttribute('data-action');

    window.dashboardController(sSystem, sAction);
}

window.dashboardController = function(sSystem,sAction) {
    tcms.apiCall(sSystem,sAction,{},function(result) {
        let oId = document.getElementById('content');
        oId.innerHTML = '';

        if (result.status==='OK') {
            if (sSystem === 'page') {
                tcms.addButton('content','btnAddPage',function() {
                    var sPageName = prompt('Page name:');
                    if (sPageName!=null && sPageName!="") {
                        window.dashboardAddPage(tcms.escape(sPageName));
                    }
                },'add page','primary');

                let items = result.pages;
                if (Array.isArray(items)) {
                    items.forEach(function(item) {
                        tcms.addCard('content',item.name,'...',item.summary,'\
                            <a href="javascript://" onclick="dashboardEditPage(this)" data-name="'+item.nameSafe+'" class="card-link">edit</a>\
                        ');
                    });
                }
            } else if (sSystem==='block') {

            } else if (sSystem==='asset') {
                var div = document.createElement('div')
                div.innerHTML = result.form;
                oId.append(div);
                window.dashboardSetAssetHandlers();
            }
        }
    });
}

window.dashboardUploadFile = function(evt) {
    var files = document.getElementById('files').files;

    // prepare statistics:
    var iTotalSize = 0;
    var iTotalUploaded = 0;
    for (var j = 0; j <files.length; j++) {
        var blob = files[j];
        iTotalSize = iTotalSize + blob.size;
    }

    document.getElementById('totalSizeCaption').innerHTML = iTotalSize;

    for (var j = 0; j <files.length; j++) {
        var blob = files[j];
        console.log(blob);
        console.log('chunking');
        const BYTES_PER_CHUNK = 1024 * 1024;
        // 1MB chunk sizes.
        const SIZE = blob.size;

        var start = 0;
        var end = BYTES_PER_CHUNK;
        var sName = blob.name;

        while (start < SIZE) {

            var chunk = blob.slice(start, end);

            var xhr = new XMLHttpRequest();
            xhr.open('POST', tcms.apiUrl('asset','upload','name=' + encodeURIComponent(sName) + '&size=' + SIZE + '&start=' + start), false);
            xhr.onload = function(e) {};
            xhr.send(blob);

            iTotalUploaded = iTotalUploaded + (Math.min(end,SIZE) - start);

            console.log('uploaded: ' + iTotalUploaded);
            // update progress bar:
            let iFraction = (iTotalUploaded / iTotalSize) * 100;
            document.getElementById("upload-progress").style.width = iFraction + '%';
            document.getElementById("uploadedSizeCaption").innerHTML = iTotalUploaded;

            start = end;
            end = start + BYTES_PER_CHUNK;

        }
    }
}

window.dashboardSetAssetHandlers = function() {
    document.getElementById('files').addEventListener('change', window.dashboardUploadFile, false);
}

window.dashboardEditPage = function(link) {
    var sName = link.getAttribute('data-name');

    tcms.apiCall('page','edit',{
             'page':sName
    },function(result) {
            var oId = document.getElementById('content');
            oId.innerHTML = '';
            if (result.status==='OK') {
                if (typeof result.content != 'undefined') {
                    tcms.attachEditor('content', result.content);
                    tcms.getEditor('content').setAttribute('data-page-name',sName);
                    tcms.addButton('content','btnSavePage',window.savePage,'save','primary');
                }
            }
    });
}

window.dashboardAddPage = function(sName) {
    document.getElementById('content').innerHTML = '';

    tcms.attachEditor('content', '');
    tcms.getEditor('content').setAttribute('data-page-name',sName);
    tcms.addButton('content','btnSavePage',window.savePage,'save','primary');
}

window.savePage = function() {
    var sContent = tcms.getEditor('content').value;
    var sName = tcms.getEditor('content').getAttribute('data-page-name')

    tcms.apiCall('page','save',{
             'page':sName,
             'content':sContent
    },function(result) {
            var oId = document.getElementById('content');
            oId.innerHTML = '';
            if (result.status==='OK') {
                alert('content saved');
                window.dashboardController('page','list');
            }
    });
}

[/section]

